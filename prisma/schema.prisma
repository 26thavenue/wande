// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Product{
  id          String     @id @default(cuid()) 
  description String
  imageUrl    String
  name        String
  price       Int
  numberInStock Int      @default(1)
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  brand       String
  category    String
  cartItems CartItems[]
  @@index([brand, category, price, createdAt(sort:Desc)])

  @@map("products")
}

model CartItems{
  id      String @id @default(uuid())
  quantity Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user User @relation(fields: [userId], references: [id])
  userId String
  product Product @relation(fields: [productId], references: [id])
  productId String

  @@map("cartItems")
}

model User{
  id      String @id @default(uuid())
  name String
  email String @unique
  hashedPassword String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  role      ROLE @default(USER)
  cartItems CartItems[]
  orders Order[]
  payments Payment[]

  @@map("users")
}

model Order{
  id      String @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user User @relation(fields: [userId], references: [id])
  userId String
  totalAmount Float
  address String
  status String @default("PENDING")
  items Json[]

  @@map("orders" )
  
}

enum ROLE{
  ADMIN
  USER
}

model Payment {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  amount    Float
  currency  String
  source    Json


  @@map("payments")
}



